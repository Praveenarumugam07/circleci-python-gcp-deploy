version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout

      - run:
          name: Set up Python virtual environment
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

      - run:
          name: Run tests (optional)
          command: |
            echo "No tests configured for this simple app"

  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout

      - run:
          name: Install Google Cloud SDK
          command: |
            curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-440.0.0-linux-x86_64.tar.gz
            tar -xf google-cloud-sdk-*.tar.gz
            ./google-cloud-sdk/install.sh --quiet

      - run:
          name: Decode and authenticate with GCP using Service Account Key
          command: |
            echo "$GCLOUD_SERVICE_KEY_B64" | base64 -d > ${HOME}/gcloud-service-key.json
            ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            ./google-cloud-sdk/bin/gcloud config set project $PROJECT_ID

      - run:
          name: Generate SSH key pair non-interactively
          command: |
            mkdir -p ~/.ssh
            ssh-keygen -t rsa -f ~/.ssh/google_compute_engine -C $VM_USERNAME -N ""

      - run:
          name: Deploy application to VM using gcloud and venv
          command: |
            ./google-cloud-sdk/bin/gcloud compute ssh $VM_USERNAME@$VM_NAME --zone=$VM_ZONE --command="
              cd ~
              mkdir -p circleci_app
              cd circleci_app
              echo '${CIRCLE_SHA1}' > deployed_commit.txt
              sudo apt update
              sudo apt install -y python3-venv
              python3 -m venv venv
              source venv/bin/activate
              pip install --upgrade pip
              pip install flask
              echo \"from flask import Flask; app=Flask(__name__); @app.route('/')\ndef hello(): return 'Deployed via CircleCI'; app.run(host='0.0.0.0', port=5000)\" > app.py
              pkill -f app.py || true
              nohup venv/bin/python app.py &
            "

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
